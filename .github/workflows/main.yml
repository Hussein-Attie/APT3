name: Build project and Send to the Cloud

on:
  push:
    branches:
      - master

jobs:
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
        with:
         fetch-depth: 0

      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.github_token }}
          

      - name: create release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  Build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: changelog
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
     
    steps:
    
    #Checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true
          
     # Cache
      - uses: actions/cache@v2
        with:
          path: Library

          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      # Test
     # - name: Run tests
      #  uses: game-ci/unity-test-runner@v2
       # env:
        #  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        #with:
         # githubToken: ${{ secrets.GITHUB_TOKEN }}
         # key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          #restore-keys: |
           # Library-
            
      # Upload Test Results       
   #   - uses: actions/upload-artifact@v2
    #    if: always()
     #   with:
      #    name: Test results
       #   path: artifacts
          

      #Build
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          versioning: Semantic
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: TestGame-${{ matrix.targetPlatform }}

       #Output 
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
        
         #upload to google drive
      - name: Upload build to Google Drive
        uses: Jodebu/upload-to-drive@master
        with:
           target:  build/${{ matrix.targetPlatform }}
           name: Build-${{ matrix.targetPlatform }}v-${{ steps.myBuildStep.outputs.buildVersion }}
           credentials: ${{ secrets.CREDENTIALS }}
           folder: ${{ secrets.DRIVE_FOLDER_ID }}
   

 
