name: Build project and Send to the Cloud

on:
    push

jobs:

  Changelog:

    name: Generate Changelog
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.generate_changelog.outputs.tag }}
     # output2: ${{steps.versioning.outputs.prop}} 

    steps:
            
    #Checkout   
      - name: Checkout
        uses: actions/checkout@v3
        with:
         fetch-depth: 0
         
     # - name: Get version
      #  id: versioning
       # uses: notiz-dev/github-action-json-property@release
       # with: 
        #  path: 'package.json'
         # prop_path: 'version'
            
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
            github-token: ${{ secrets.github_token }}
            output-file: "false"

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
            GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
         tag_name: ${{ steps.changelog.outputs.tag }}
         release_name: ${{ steps.changelog.outputs.tag }}
         body: ${{ steps.changelog.outputs.clean_changelog }}
    
  Build:

    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: Changelog

    outputs:
      output1: ${{ steps.build.outcome }}

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
     
    steps:
    
      
    #Checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
 
          
    # Cache
      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
          
    # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
            
    # Test Results   
      - name: Output test results artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          path: artifacts
          
    
    #Build
      - name: Build project for ${{ matrix.targetPlatform }}
        uses: game-ci/unity-builder@v2 
        id: build 
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }} 
        with:
          versioning: Custom
          version: ${{ needs.Changelog.outputs.output1 }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: TestGame-${{ matrix.targetPlatform }}-v${{ steps.build.outputs.buildVersion }}
     
    #Build Output
      - name: Output build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ steps.build.outputs.buildVersion }}
          path: build/${{ matrix.targetPlatform }}
        
     
    #Cloud Storage
      - name: Upload build to Google Drive
        uses: Jodebu/upload-to-drive@master
        with:
           target:  build/${{ matrix.targetPlatform }}
           name: Build-${{ matrix.targetPlatform }}v-${{ steps.build.outputs.buildVersion }}
           credentials: ${{ secrets.CREDENTIALS }}
           folder: ${{ secrets.DRIVE_FOLDER_ID }}

 
   
            
 # Clean-up:
  
  #  name: Clean-up if Workflow Fails
  #  runs-on: ubuntu-latest
  #  needs: [Build, Changelog]

  #  if: always() && (needs.Build.outputs.output1 != 'success' )  
  #  steps:
    
        
  #    - name: Checkout
  #      uses: actions/checkout@v2
  #      with:
  #        ref: ${{ github.event.inputs.branch }}
  #        fetch-depth: 0 
        
    
        
  #  #Rollback
  #   - name: Rollback Release
  #     uses: author/action-rollback@stable
  #     with:
  #         # Using a known release ID
  #         #id: ${{ steps.create_release.id }}
  #         tag: ${{ needs.Changelog.outputs.output1 }}
  #      env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            




      #- name: Undo Bump 
       # uses: maxgfr/github-change-json@main
       # with:
        #  key: 'version'
        #  value: ${{ needs.changelog.outputs.output2 }}
         # path: package.json
          #commit: false # it will commit the change
          
      #- name: Undo Bump locally
       # uses: maxgfr/github-change-json@main
        #with:
         # key: 'version'
          #value: ${{ needs.changelog.outputs.output2 }}
          #path: package.json
   #   - name: Update package.json version
    #    uses: jossef/action-set-json-field@v1
     #   with:
      #      file: demo.json
       #     field: version
        #    value: '1.0.0'

     # - name: Commit files
      #  run: |
       #  git config --local user.email "action@github.com"
        # git config --local user.name "GitHub Action"
         #git add *
         #git commit -m "chore: debump json"
        
    
    #  - name: Push changes
     #   uses: ad-m/github-push-action@v0.6.0
      #  with:
       #  github_token: ${{ github.token }}
        # tags: true
     

